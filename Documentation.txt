Инструкция к коду (т.к. некоторые повторяющиеся участки кода не прокоментированы):

1. mov si, {сообщение} - загружает сообщения для вывода (В комментариях указано в кавычках краткое содержание сообщения)
2. call print - тоже самое что print(""), но перед этим надо загрузить сообщение в стек si

3. jmp {функция} - переход к другой функции

4. push {регистр} - сохранение значение регистра в стек
5. pop {регистр} - выгрузка последнего значения в стеке в регистр

4* pusha - сохранение всех регистров в стек
5* popa - выгрузка всех регистров из стека

6. ret - выход из функции (если call)

7. hlt - остановка CPU (но процессор может возобновить работу если сработает прерывание)
8. cli - отключение прерываний, чтобы процессор не смог выйти из состояния "halt".

9. inc {регистр} - увеличение значения на 1 указанного регистра
10. dec {регистр} - уменьшение значения на 1 указанного регистра

11. xor {регистр} {регистр или число} - побайтовое ИЛИ, если байт первого равен байту второго = записывается 0, если не равен = 1

